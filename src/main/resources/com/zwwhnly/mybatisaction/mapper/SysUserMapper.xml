<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zwwhnly.mybatisaction.mapper.SysUserMapper">
    <resultMap id="sysUserMap" type="com.zwwhnly.mybatisaction.model.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectById" resultMap="sysUserMap">
        SELECT * FROM sys_user WHERE id = #{id}
    </select>
    <select id="selectAll" resultType="com.zwwhnly.mybatisaction.model.SysUser">
        SELECT id,
               user_name,
               user_password,
               user_email,
               user_info,
               head_img,
               create_time
        FROM sys_user
    </select>
    <select id="selectRolesByUserId" resultType="com.zwwhnly.mybatisaction.model.SysRoleExtend">
        SELECT r.id,
               r.role_name   roleName,
               r.enabled,
               r.create_by   createBy,
               r.create_time createTime,
               u.user_name   "sysUser.userName",
               u.user_email   "sysUser.userEmail"
        FROM sys_user u
        INNER JOIN sys_user_role ur ON u.id = ur.user_id
        INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE u.id = #{userId}
    </select>
    <insert id="insert">
        INSERT INTO sys_user(id, user_name, user_password, user_email, user_info, head_img, create_time)
        VALUES (#{id},#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertUseGeneratedKeys" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user(user_name, user_password, user_email, user_info, head_img, create_time)
        VALUES (#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertUseSelectKey">
        INSERT INTO sys_user(user_name, user_password, user_email, user_info, head_img, create_time)
        VALUES
        (#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
        <selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <update id="updateById">
        UPDATE sys_user
        SET user_name = #{userName},
            user_password = #{userPassword},
            user_email = #{userEmail},
            user_info = #{userInfo},
            head_img = #{headImg,jdbcType=BLOB},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        WHERE id = #{id}
    </update>
    <delete id="deleteById">
        DELETE FROM sys_user WHERE id = #{id}
    </delete>
    <delete id="deleteBySysUser">
        DELETE FROM sys_user WHERE id = #{id}
    </delete>
    <select id="selectRolesByUserIdAndRoleEnabled" resultType="com.zwwhnly.mybatisaction.model.SysRole">
        SELECT r.id,
               r.role_name   roleName,
               r.enabled,
               r.create_by   createBy,
               r.create_time createTime
        FROM sys_user u
        INNER JOIN sys_user_role ur ON u.id = ur.user_id
        INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE u.id = #{userId} AND r.enabled = #{enabled}
    </select>
    <select id="selectRolesByUserAndRole" resultType="com.zwwhnly.mybatisaction.model.SysRole">
        SELECT r.id,
        r.role_name   roleName,
        r.enabled,
        r.create_by   createBy,
        r.create_time createTime
        FROM sys_user u
        INNER JOIN sys_user_role ur ON u.id = ur.user_id
        INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE u.id = #{user.id} AND r.enabled = #{role.enabled}
    </select>
    <select id="selectByUser" resultType="com.zwwhnly.mybatisaction.model.SysUser">
        SELECT id,
        user_name,
        user_password,
        user_email,
        user_info,
        head_img,
        create_time
        FROM sys_user
        <!--WHERE 1 = 1
        <if test="userName != null and userName != ''">
            AND user_name LIKE CONCAT('%',#{userName},'%')
        </if>
        <if test="userEmail != null and userEmail != ''">
            AND user_email = #{userEmail}
        </if>-->
        <where>
            <if test="userName != null and userName != ''">
                <bind name="userNameLike" value="'%' +userName+'%'"/>
                AND user_name LIKE #{userNameLike}
            </if>
            <if test="userEmail != null and userEmail != ''">
                AND user_email = #{userEmail}
            </if>
        </where>
    </select>
    <update id="updateByIdSelective">
        UPDATE sys_user
        <!--SET
        <if test="userName != null and userName != ''">
            user_name = #{userName},
        </if>
        <if test="userPassword != null and userPassword != ''">
            user_password = #{userPassword},
        </if>
        <if test="userEmail != null and userEmail != ''">
            user_email = #{userEmail},
        </if>
        <if test="userInfo != null and userInfo != ''">
            user_info = #{userInfo},
        </if>
        <if test="headImg != null">
            head_img = #{headImg,jdbcType=BLOB},
        </if>
        <if test="createTime != null">
            create_time = #{createTime,jdbcType=TIMESTAMP},
        </if>
        id = #{id}-->
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="userPassword != null and userPassword != ''">
                user_password = #{userPassword},
            </if>
            <if test="userEmail != null and userEmail != ''">
                user_email = #{userEmail},
            </if>
            <if test="userInfo != null and userInfo != ''">
                user_info = #{userInfo},
            </if>
            <if test="headImg != null">
                head_img = #{headImg,jdbcType=BLOB},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            id = #{id},
        </set>
        WHERE id = #{id}
    </update>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user(user_name, user_password,
        <if test="userEmail != null and userEmail != ''">
            user_email,
        </if>
        user_info, head_img, create_time)
        VALUES (#{userName},#{userPassword},
        <if test="userEmail != null and userEmail != ''">
            #{userEmail},
        </if>
        #{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <select id="selectByIdOrUserName" resultType="com.zwwhnly.mybatisaction.model.SysUser">
        SELECT id,
        user_name,
        user_password,
        user_email,
        user_info,
        head_img,
        create_time
        FROM sys_user
        WHERE 1 = 1
        <choose>
            <when test="id != null">
                AND id = #{id}
            </when>
            <when test="userName != null and userName != ''">
                AND user_name = #{userName}
            </when>
            <otherwise>
                AND 1 = 2
            </otherwise>
        </choose>
    </select>
    <select id="selectByIdList" resultType="com.zwwhnly.mybatisaction.model.SysUser">
        SELECT id,
        user_name,
        user_password,
        user_email,
        user_info,
        head_img,
        create_time
        FROM sys_user
        WHERE id IN
        <foreach collection="array" open="(" close=")" separator=","
                 item="id" index="i">
            #{id}
        </foreach>
    </select>
    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user(user_name, user_password, user_email, user_info, head_img, create_time)
        VALUES
        <foreach collection="list" item="user" separator=",">
            (#{user.userName},#{user.userPassword},#{user.userEmail},#{user.userInfo},#{user.headImg,jdbcType=BLOB},#{user.createTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <update id="updateByMap">
        UPDATE sys_user
        SET
        <foreach collection="_parameter" item="val" index="key" separator=",">
            ${key} = #{val}
        </foreach>
        WHERE id = #{id}
    </update>
</mapper>